---
######################### Standing Desk ################################
substitutions:
  device_name: standingdesk
  ip_address: 192.168.131.34 # Set use_address below if planning to change static ip

# This is the configuration for a Fully Jarvis Standing Desk (https://www.fully.com/standing-desks/jarvis-frame-only.html)
# I bought mine in 2020

# Connected to the ESP using something like this:
# RJ45 Screw Terminal Adaptor Female: https://www.amazon.com/Poyiccot-Compatible-Terminal-Connector-Ethernet/dp/B07WKKVZRF
# Pinout (Facing the screw terminals, from left to right, 1-8):
# 1: Unassigned
# 2: Unassigned
# 3: Ground
# 4: Unassigned
# 5: 5V (I think most other unassigned would also work)
# 6: Connected to D7 (pin7)
# 7: Connected to D6 (pin6)
# 8: Connected to D5 (pin5)

# RJ45 Ethernet Splitter Adapter: 1 Male to 2 Female: https://www.amazon.com/Ethernet-Splitter-Yeworth-Networking-Extension/dp/B09PMXTX2K
# Male plugged into motor control box, 1 female goes to the control panel, 1 female goes to the ESP

# For the multiplication factors below, I
# 1. Set the delay to a fixed value, e.g. 2 seconds
# 2. Drive the desk into the lowest position
# 3. Read the height from the display (or measure it or whatever). Put it into Excel
# 4. Press the ESP "button" to drive it up
# 5. Read the height from the display. Put it into Excel
# 6. Repeat steps 4 and 5 until a few measurements are taken
# 7. Calculate the height differences, take their average, divide the milliseconds by the height in cm to get the ms/cm value
# 8. Enter the value in the lambdas below
# 9. Repeat for going down


esphome:
  name: ${device_name}
  platform: ESP8266
  board: d1_mini

wifi:
  networks:
    # linksys
  - ssid: !secret lswifissid
    password: !secret lswifipass

  manual_ip:
    static_ip: ${ip_address}
    gateway: !secret wifigateway
    subnet: !secret wifisubnet
    dns1: !secret wifidns
  # use_address: 192.168.131.1

# Enable logging
logger:

api:
  password: !secret espapipass

ota:
  password: !secret espotapass

time:
  - platform: homeassistant
    id: homeassistant_time


output:
  - platform: gpio
    id: pin5
    pin:
      number: GPIO14
      inverted: true

  - platform: gpio
    id: pin6
    pin:
      number: GPIO12
      inverted: true

  - platform: gpio
    id: pin7
    pin:
      number: GPIO13
      inverted: true

number:
  - platform: template
    name: ${device_name}_direction_value
    id: target_movement_cm
    optimistic: true
    unit_of_measurement: 'cm'
    icon: mdi:altimeter
    min_value: 1
    max_value: 70
    step: 1
    initial_value: 10
    restore_value: false
    mode: 'box'

script:

- id: direction_down
  mode: single
  then:
    - logger.log: "Moving down"
    - output.turn_on: pin5
    - delay: !lambda "return float(id(target_movement_cm).state) * 275.2;"
    - output.turn_off: pin5

- id: direction_up
  mode: single
  then:
    - logger.log: "Moving up"
    - output.turn_on: pin6
    - delay: !lambda "return float(id(target_movement_cm).state) * 298.5;"
    - output.turn_off: pin6

- id: position_m1
  mode: single
  then:
    - logger.log: "Memory 1: Standing position"
    - output.turn_on: pin5
    - output.turn_on: pin6
    - delay: 500ms
    - output.turn_off: pin5
    - output.turn_off: pin6

- id: position_m2
  mode: single
  then:
    - logger.log: "Memory 2: Sitting position"
    - output.turn_on: pin7
    - delay: 500ms
    - output.turn_off: pin7

- id: position_m3
  mode: single
  then:
    - logger.log: "Memory 3"
    - output.turn_on: pin5
    - output.turn_on: pin7
    - delay: 500ms
    - output.turn_off: pin5
    - output.turn_off: pin7

- id: position_m4
  mode: single
  then:
    - logger.log: "Memory 4"
    - output.turn_on: pin6
    - output.turn_on: pin7
    - delay: 500ms
    - output.turn_off: pin6
    - output.turn_off: pin7


button:
  - platform: restart
    name: ${device_name}_restart
    id: restart_esp

  - platform: template
    name: ${device_name}_direction_down
    on_press:
      - script.execute: direction_down
  
  - platform: template
    name: ${device_name}_direction_up
    on_press:
      - script.execute: direction_up
  
  - platform: template
    name: ${device_name}_position_standing
    on_press:
      - script.execute: position_m1
  
  - platform: template
    name: ${device_name}_position_sitting
    on_press:
      - script.execute: position_m2
  
  - platform: template
    name: ${device_name}_position_m3
    on_press:
      - script.execute: position_m3
  
  - platform: template
    name: ${device_name}_position_m4
    on_press:
      - script.execute: position_m4
      

sensor:
  - platform: wifi_signal
    name: ${device_name}_wifi_signal
    update_interval: 60s
  - platform: uptime
    name: ${device_name}_uptime
    
text_sensor:
  - platform: version
    name: ${device_name}_version
  - platform: wifi_info
    ip_address:
      name: ${device_name}_ip
    ssid:
      name: ${device_name}_ssid
    bssid:
      name: ${device_name}_bssid
    mac_address:
      name: ${device_name}_mac
